===
Singleline comment
===

func_call()
// This is a comment!
func_call();

---

(source_file
  (expression_statement
      (call_expression
        function: (identifier)))
  (line_comment)
  (expression_statement
      (call_expression
        function: (identifier))))

===
Block comment
===

func_call()
/* Block-Comment! */
func_call() 

---

(source_file
    (expression_statement
        (call_expression
            (identifier)))
    (block_comment)
    (expression_statement
        (call_expression
            (identifier))))

===
Block comment - multiline
===

func_call()
/*
 * 
 * Block-Comment!
 */
func_call() 

---

(source_file
    (expression_statement
        (call_expression
            (identifier)))
    (block_comment)
    (expression_statement
        (call_expression
            (identifier))))

===
Block comment - nested
===

func_call()
/*
 * Outer Comment
 * /*
 *  * Inner comment
 *  */
 */
func_call() 

---

(source_file
    (expression_statement
        (call_expression
            (identifier)))
    (block_comment)
    (expression_statement
        (call_expression
            (identifier))))
